name: CI

on:
  push:
    branches: [ main, develop ]
  # Removed pull_request trigger to avoid redundancy with other workflows
  schedule:
    # Weekly slow type checking (runs every Monday at 2 AM UTC)
    - cron: '0 2 * * 1'

env:
  # Shared environment variables
  NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
  NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
  SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
  SENTRY_DSN: ${{ secrets.SENTRY_DSN }}

jobs:
  # Lint job - fast feedback
  lint:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    strategy:
      matrix:
        node-version: [20.x]  # Single version for speed
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run ESLint
        run: npm run lint

  # TypeScript type checking
  typecheck:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Cache TypeScript
        uses: actions/cache@v4
        with:
          path: |
            tsconfig.tsbuildinfo
            .next/cache
          key: ts-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('tsconfig.json', 'package-lock.json') }}
          restore-keys: |
            ts-${{ runner.os }}-${{ matrix.node-version }}-
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run TypeScript check
        run: npm run typecheck

  # Security scanning
  security:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run security tests
        run: npm run tool:security:test
      
      - name: Run npm audit
        run: npm audit --audit-level=high
        continue-on-error: true
      
      - name: Run bundle security analysis
        run: npm run tool:security:bundle

  # Policy and guard tests
  policy-guard:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run policy enforcement
        run: npm run policy:enforce
      
      - name: Run guard tests
        run: npm run guard:test
      
      - name: Run UI contracts
        run: npm run ui:contracts

  # Unit and integration tests with coverage
  test:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    strategy:
      matrix:
        node-version: [18.x, 20.x]  # Test on both LTS versions
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Cache Jest
        uses: actions/cache@v4
        with:
          path: |
            .jest/cache
            node_modules/.cache/jest
          key: jest-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('jest.config.js', 'package-lock.json') }}
          restore-keys: |
            jest-${{ runner.os }}-${{ matrix.node-version }}-
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run unit tests
        run: npm run test
      
      - name: Run specialized tests
        run: |
          npm run tool:test:policy
          npm run tool:test:rls
          npm run tool:test:webhooks
          npm run tool:test:guardian
          npm run tool:test:csp
      
      - name: Run smoke tests
        run: npm run tool:test:smoke
      
      - name: Generate test coverage
        run: npm run test -- --coverage --coverageReporters=json --coverageReporters=lcov --coverageReporters=text
        if: matrix.node-version == '20.x'  # Only generate coverage on one version
      
      - name: Upload coverage to artifacts
        uses: actions/upload-artifact@v4
        if: matrix.node-version == '20.x'
        with:
          name: coverage-report
          path: |
            coverage/
            !coverage/tmp/
          retention-days: 30

  # Build with performance monitoring
  build:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    needs: [lint, typecheck, security, policy-guard, test]
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Cache Next.js build
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          key: nextjs-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            nextjs-${{ runner.os }}-${{ matrix.node-version }}-
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build with performance monitoring
        run: |
          echo "Build started at: $(date -u +%Y-%m-%dT%H:%M:%SZ)"
          START_TIME=$(date +%s)
          npm run build
          END_TIME=$(date +%s)
          BUILD_TIME=$((END_TIME - START_TIME))
          echo "Build completed in: ${BUILD_TIME}s"
          echo "build_time_seconds=${BUILD_TIME}" >> $GITHUB_ENV
      
      - name: Analyze bundle size
        run: |
          echo "=== Bundle Size Analysis ==="
          du -sh .next/ || echo "No .next directory"
          find .next -name "*.js" -type f -exec du -h {} + | sort -hr | head -10 || echo "No JS files found"
          echo "========================="
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: |
            .next/
            !.next/cache/
          retention-days: 7

  # Performance regression detection
  performance:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    needs: [build]
    steps:
      - uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: .next/
      
      - name: Performance regression check
        run: |
          echo "=== Performance Metrics ==="
          echo "Build time: ${{ env.build_time_seconds }}s"
          echo "Bundle analysis complete"
          echo "========================="

  # Weekly slow type checking with skipLibCheck: false
  slow-types:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Cache TypeScript (slow)
        uses: actions/cache@v4
        with:
          path: |
            tsconfig.tsbuildinfo
            .next/cache
          key: ts-slow-${{ runner.os }}-${{ hashFiles('tsconfig.json', 'package-lock.json') }}
          restore-keys: |
            ts-slow-${{ runner.os }}-
      
      - name: Install dependencies
        run: npm ci
      
      - name: "Run comprehensive type checking (skipLibCheck: false)"
        run: npm run tool:typecheck:slow

  # Dependency vulnerability scanning and updates
  dependency-scan:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'  # Weekly dependency checks
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run security audit
        run: |
          echo "=== npm audit report ==="
          npm audit --audit-level=moderate || echo "Vulnerabilities found - review needed"
          echo "======================"
      
      - name: Check for outdated packages
        run: |
          echo "=== Outdated packages ==="
          npm outdated || echo "Packages need updates"
          echo "========================"
