name: Sentinel Preview Check

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main, develop]

env:
  NODE_VERSION: '20.x'

jobs:
  sentinel-preview:
    name: Sentinel Preview Check
    runs-on: ubuntu-latest
    
    # Only run if we have a preview URL (Vercel provides this)
    if: github.event.pull_request.head.repo.full_name == github.repository
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run type checking
      run: npm run typecheck
      
    - name: Run linting
      run: npm run lint
      
    - name: Wait for Vercel preview deployment
      uses: amondnet/vercel-action@v25
      id: vercel-action
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.ORG_ID }}
        vercel-project-id: ${{ secrets.PROJECT_ID }}
        working-directory: ./
        vercel-args: '--prod'
        
    - name: Get preview URL
      id: preview-url
      run: |
        PREVIEW_URL="${{ steps.vercel-action.outputs.preview-url }}"
        echo "preview-url=$PREVIEW_URL" >> $GITHUB_OUTPUT
        echo "Preview URL: $PREVIEW_URL"
        
    - name: Wait for preview deployment to be ready
      run: |
        PREVIEW_URL="${{ steps.preview-url.outputs.preview-url }}"
        echo "Waiting for preview deployment to be ready..."
        
        # Wait up to 5 minutes for deployment to be ready
        for i in {1..30}; do
          if curl -f -s "$PREVIEW_URL" > /dev/null; then
            echo "Preview deployment is ready!"
            break
          fi
          echo "Waiting... (attempt $i/30)"
          sleep 10
        done
        
        # Final check
        if ! curl -f -s "$PREVIEW_URL" > /dev/null; then
          echo "Preview deployment failed to become ready"
          exit 1
        fi
        
    - name: Run preview smoke tests
      id: preview-tests
      env:
        PREVIEW_URL: ${{ steps.preview-url.outputs.preview-url }}
      run: |
        echo "Running smoke tests against: $PREVIEW_URL"
        
        # Run the smoke test script
        npx tsx __tests__/smoke.preview.test.ts
        
        # Capture test results
        if [ $? -eq 0 ]; then
          echo "preview_tests_passed=true" >> $GITHUB_OUTPUT
          echo "PREVIEW_TEST_RESULTS=All smoke tests passed successfully" >> $GITHUB_ENV
        else
          echo "preview_tests_passed=false" >> $GITHUB_OUTPUT
          echo "PREVIEW_TEST_RESULTS=Smoke tests failed" >> $GITHUB_ENV
        fi

          - name: Generate Change Journal Entry
       if: always()
       env:
         PREVIEW_URL: ${{ steps.preview-url.outputs.preview-url }}
         PREVIEW_TEST_RESULTS: ${{ env.PREVIEW_TEST_RESULTS }}
         PREVIEW_LOGS_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts
         GITHUB_ACTOR: ${{ github.actor }}
         GITHUB_REPOSITORY: ${{ github.repository }}
         GITHUB_RUN_ID: ${{ github.run_id }}
       run: |
         echo "🗂️ Generating Change Journal entry for preview check..."
         npx tsx scripts/sentinel-report.ts

    - name: Upload Change Journal Artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: sentinel-artifacts
        path: |
          .sentinel/journal/
        
    - name: Comment PR with results
      if: always()
      uses: actions/github-script@v7
      with:
        script: |
          const { data: comments } = await github.rest.issues.listComments({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
          });
          
          // Check if we already commented
          const existingComment = comments.find(comment => 
            comment.user.type === 'Bot' && 
            comment.body.includes('🚀 Sentinel Preview Check Results')
          );
          
          const status = '${{ job.status }}';
          const previewUrl = '${{ steps.preview-url.outputs.preview-url }}';
          
          let commentBody = '';
          
          if (status === 'success') {
            commentBody = `## 🚀 Sentinel Preview Check Results
             
             ✅ **Preview deployment successful!**
             
             🔗 **Preview URL:** ${previewUrl}
             
             🎯 **Feature flags working correctly**
             - ✅ Sentinel check route accessible
             - ✅ Feature flag gating verified
             - ✅ Preview deployment healthy
             
             This PR is ready for review with confidence that feature flags are working as expected.`;
          } else {
            commentBody = `## 🚀 Sentinel Preview Check Results
             
             ❌ **Preview deployment check failed**
             
             🔗 **Preview URL:** ${previewUrl}
             
             ⚠️ **Issues detected:**
             - Feature flag gating may not be working correctly
             - Preview deployment may have issues
             
             Please review the logs and fix any issues before merging.`;
          }
          
          if (existingComment) {
            await github.rest.issues.updateComment({
              comment_id: existingComment.id,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody,
            });
          } else {
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody,
            });
          }
