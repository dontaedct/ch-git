{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [
    {
      "source": "/(.*)",
      "headers": [
        {
          "key": "X-Content-Type-Options",
          "value": "nosniff"
        },
        {
          "key": "Referrer-Policy",
          "value": "strict-origin-when-cross-origin"
        },
        {
          "key": "Content-Security-Policy",
          "value": "default-src 'self'; img-src 'self' data: blob:; media-src 'self' blob:; script-src 'self' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; connect-src 'self' https:; frame-ancestors 'none'; base-uri 'self';"
        }
      ],
      "regex": "^(?:/(.*))(?:/)?$"
    }
  ],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/auto-save-demo",
      "regex": "^/auto\\-save\\-demo(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auto\\-save\\-demo(?:/)?$"
    },
    {
      "page": "/client-portal",
      "regex": "^/client\\-portal(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/client\\-portal(?:/)?$"
    },
    {
      "page": "/client-portal/check-in",
      "regex": "^/client\\-portal/check\\-in(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/client\\-portal/check\\-in(?:/)?$"
    },
    {
      "page": "/design-system",
      "regex": "^/design\\-system(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/design\\-system(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/guardian-demo",
      "regex": "^/guardian\\-demo(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/guardian\\-demo(?:/)?$"
    },
    {
      "page": "/intake",
      "regex": "^/intake(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/intake(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/sessions",
      "regex": "^/sessions(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/sessions(?:/)?$"
    },
    {
      "page": "/trainer-profile",
      "regex": "^/trainer\\-profile(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/trainer\\-profile(?:/)?$"
    },
    {
      "page": "/weekly-plans",
      "regex": "^/weekly\\-plans(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/weekly\\-plans(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}