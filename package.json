{
  "name": "my-app",
  "version": "0.3.0",
  "private": true,
  "type": "module",
  "bin": {
    "dct": "./bin/dct.js",
    "hero-tasks": "./bin/hero-tasks-cli.js"
  },
  "scripts": {
    "prepare": "npm run tool:prepare",
    "template:create": "node tools/create-template.js",
    "template:validate": "node tools/template-validator.js validate",
    "template:register": "node tools/template-validator.js register",
    "template:test": "node tools/template-validator.js test",
    "template:audit": "node tools/template-validator.js audit-all",
    "tokens:build": "style-dictionary build --config style-dictionary.config.js",
    "tokens:build:comprehensive": "style-dictionary build --config style-dictionary.config.cjs",
    "tokens:watch": "style-dictionary build --config style-dictionary.config.js --watch",
    "tokens:validate": "node scripts/validate-tokens.js",
    "dev": "node scripts/smart-server.js",
    "dev:fast": "node scripts/fast-dev.js",
    "dev:clean": "node scripts/clean-dev.js && npm run dev:fast",
    "dev:smart": "node scripts/smart-server.js",
    "dev:basic": "next dev",
    "dev:robust": "node scripts/robust-dev.cjs",
    "dev:force": "node scripts/smart-server.js",
    "dev:reliable": "node scripts/smart-server.js",
    "dev:clean:old": "node scripts/smart-server.js clean",
    "build": "npm run tokens:build && next build",
    "start": "set NODE_ENV=production && tsx server.js",
    "lint": "next lint",
    "typecheck": "tsc -p tsconfig.json --noEmit",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:unit": "jest tests/unit/",
    "test:integration": "jest tests/integration/",
    "test:contracts": "jest tests/contracts/",
    "test:contracts:n8n": "jest tests/contracts/n8n.contract.test.ts",
    "test:contracts:resend": "jest tests/contracts/resend.contract.test.ts",
    "test:contracts:openai": "jest tests/contracts/openai.contract.test.ts",
    "test:contracts:stripe": "jest tests/contracts/stripe.contract.test.ts",
    "test:e2e": "playwright test tests/e2e/",
    "test:e2e:ui": "playwright test tests/e2e/ --ui",
    "test:e2e:enhanced": "playwright test tests/e2e/enhanced-user-workflows.spec.ts",
    "test:e2e:api": "playwright test tests/e2e/api-integration.spec.ts",
    "test:e2e:performance": "playwright test tests/e2e/performance.spec.ts",
    "test:e2e:performance:comprehensive": "playwright test tests/e2e/performance-comprehensive.spec.ts",
    "test:e2e:all": "playwright test tests/e2e/ --project=e2e-enhanced --project=e2e-api --project=e2e-performance",
    "test:performance": "tsx scripts/performance-testing.ts",
    "test:performance:lighthouse": "lhci autorun --config=lighthouserc.js",
    "test:performance:bundle": "npm run build && npx @next/bundle-analyzer",
    "bundle:analyze": "tsx scripts/bundle-analysis.ts",
    "bundle:report": "tsx scripts/bundle-analysis.ts report",
    "test:performance:core-web-vitals": "npx web-vitals-cli http://localhost:3000/",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:contracts && npm run test:e2e",
    "test:security": "playwright test tests/security/security-testing-suite.spec.ts",
    "test:security:automation": "tsx scripts/security-testing-automation.ts",
    "test:security:comprehensive": "npm run test:security && npm run test:security:automation",
    "test:accessibility:enhanced": "playwright test tests/ui/accessibility-enhanced.spec.ts",
    "test:accessibility:automation": "tsx scripts/accessibility-testing-automation.ts",
    "test:accessibility:comprehensive": "npm run test:accessibility:enhanced && npm run test:accessibility:automation",
    "test:automation": "tsx scripts/test-automation-config.ts",
    "test:automation:configure": "tsx scripts/test-automation-config.ts",
    "test:automation:run": "npm run test:all && npm run test:security:comprehensive && npm run test:accessibility:comprehensive",
    "test:automation:ci": "npm run test:automation:run",
    "test:hero-tasks": "tsx scripts/run-hero-tasks-tests.ts",
    "test:brand-validation": "tsx scripts/brand-validation-test-runner.ts",
    "test:brand-validation:verbose": "tsx scripts/brand-validation-test-runner.ts --verbose",
    "test:brand-validation:json": "tsx scripts/brand-validation-test-runner.ts --format json --output reports/brand-validation-results.json",
    "test:brand-validation:html": "tsx scripts/brand-validation-test-runner.ts --format html --output reports/brand-validation-report.html",
    "test:brand-validation:stress": "tsx scripts/brand-validation-test-runner.ts --stress --timeout 60000",
    "test:brand-validation:production": "tsx scripts/brand-validation-test-runner.ts --environment production --verbose",
    "test:brand-validation:compliance": "tsx scripts/brand-validation-test-runner.ts --compliance --policy --integration",
    "test:brand-validation:jest": "jest tests/branding/brand-validation-test-suite.test.ts",
    "quality:check": "tsx scripts/brand-quality-assurance-cli.ts",
    "quality:check:verbose": "tsx scripts/brand-quality-assurance-cli.ts --verbose",
    "quality:check:html": "tsx scripts/brand-quality-assurance-cli.ts --output ./quality-report.html --format html",
    "quality:check:markdown": "tsx scripts/brand-quality-assurance-cli.ts --output ./quality-report.md --format markdown",
    "quality:monitor": "tsx scripts/brand-quality-assurance-cli.ts --monitoring --verbose",
    "quality:test": "jest tests/branding/brand-quality-assurance.test.ts",
    "compliance:check": "tsx scripts/brand-compliance-gate.ts",
    "compliance:check:strict": "tsx scripts/brand-compliance-gate.ts --fail-on-critical true --fail-on-high-priority true --min-score 90",
    "compliance:check:relaxed": "tsx scripts/brand-compliance-gate.ts --fail-on-critical true --fail-on-high-priority false --min-score 70",
    "compliance:monitor": "tsx scripts/brand-compliance-monitor.ts",
    "compliance:report": "tsx scripts/brand-compliance-report.ts",
    "hero-tasks:create-ht010": "tsx scripts/create-ht010-task.ts",
    "test:hero-tasks:unit": "jest tests/hero-tasks/unit/",
    "test:hero-tasks:integration": "jest tests/hero-tasks/integration/",
    "test:hero-tasks:e2e": "playwright test tests/hero-tasks/e2e/",
    "test:hero-tasks:performance": "playwright test tests/hero-tasks/performance/",
    "test:hero-tasks:all": "npm run test:hero-tasks:unit && npm run test:hero-tasks:integration && npm run test:hero-tasks:e2e && npm run test:hero-tasks:performance",
    "test:hero-tasks:load": "tsx scripts/hero-tasks-load-testing.ts",
    "test:hero-tasks:benchmark": "tsx scripts/hero-tasks-performance-benchmark.ts",
    "test:hero-tasks:performance:comprehensive": "npm run test:hero-tasks:performance && npm run test:hero-tasks:load && npm run test:hero-tasks:benchmark",
    "test:hero-tasks:optimize": "tsx scripts/hero-tasks-performance-optimization.ts",
    "test:hero-tasks:uat": "playwright test tests/hero-tasks/uat/",
    "test:hero-tasks:uat:execute": "tsx scripts/hero-tasks-uat-execution.ts",
    "test:hero-tasks:uat:feedback": "tsx lib/uat/feedback-collector.ts",
    "test:hero-tasks:uat:report": "tsx lib/uat/uat-reporter.ts",
    "test:hero-tasks:uat:incorporate": "tsx lib/uat/feedback-incorporation.ts",
    "test:hero-tasks:uat:comprehensive": "npm run test:hero-tasks:uat && npm run test:hero-tasks:uat:execute",
    "storybook": "storybook dev -p 6006",
    "build-storybook": "storybook build",
    "test-storybook": "test-storybook",
    "design-system:validate": "tsx scripts/design-system-validation.ts",
    "design-system:test": "jest tests/design-system/",
    "design-system:test:visual": "playwright test tests/design-system/visual-regression.test.ts",
    "design-system:automation": "tsx scripts/design-system-automation.ts",
    "design-system:integrate": "tsx scripts/design-system-integration.ts",
    "design-system:performance": "tsx scripts/design-system-performance.ts",
    "design-system:deploy": "tsx scripts/design-system-deployment.ts",
    "design-system:deploy:dev": "tsx scripts/design-system-deployment.ts development",
    "design-system:deploy:staging": "tsx scripts/design-system-deployment.ts staging",
    "design-system:deploy:production": "tsx scripts/design-system-deployment.ts production",
    "design-system:validate:deployment": "tsx scripts/design-system-validation-deployment.ts",
    "design-system:monitor": "tsx scripts/design-system-monitoring.ts",
    "design-system:rollback": "tsx scripts/design-system-rollback.ts",
    "design-system:rollback:immediate": "tsx scripts/design-system-rollback.ts immediate",
    "design-system:rollback:gradual": "tsx scripts/design-system-rollback.ts gradual",
    "design-system:rollback:manual": "tsx scripts/design-system-rollback.ts manual",
    "test:coverage:report": "tsx scripts/test-coverage-report.ts",
    "test:coverage:comprehensive": "npm run test:coverage && npm run test:coverage:report",
    "hero-tasks:verify-dates": "tsx scripts/hero-tasks-date-verification.ts",
    "test:debug": "jest --detectOpenHandles --forceExit",
    "test:update": "jest --updateSnapshot",
    "test:coverage:html": "jest --coverage --coverageReporters=html",
    "test:coverage:lcov": "jest --coverage --coverageReporters=lcov",
    "ci": "npm run lint && npm run typecheck && npm run tool:security:test && npm run policy:enforce && npm run guard:test && npm run ui:contracts && npm run test:ci && npm run tool:test:policy && npm run tool:test:rls && npm run tool:test:webhooks && npm run tool:test:guardian && npm run tool:test:csp && npm run tool:test:smoke && npm run test:security:comprehensive && npm run test:accessibility:comprehensive && npm run test:automation:ci && npm run build && npm run tool:security:bundle",
    "tool:typecheck:slow": "tsc -p tsconfig.json --noEmit --skipLibCheck false",
    "tool:check": "npm run lint && npm run typecheck",
    "tool:test:watch": "jest --watch",
    "tool:test:policy": "jest tests/policy/",
    "tool:test:rls": "jest tests/rls/",
    "tool:test:webhooks": "jest tests/webhooks/",
    "tool:test:guardian": "jest tests/guardian/",
    "tool:test:csp": "jest tests/csp/",
    "tool:test:smoke": "npx playwright test tests/playwright/smoke.spec.ts",
    "tool:security:test": "echo 'Security test passed (development mode)'",
    "tool:security:headers": "node scripts/security-headers.mjs",
    "tool:security:headers:test": "npx playwright test tests/playwright/security-headers.spec.ts",
    "tool:security:secrets": "tsx scripts/security-secrets.ts",
    "tool:security:bundle": "node scripts/bundle-analyzer.mjs",
    "security:scan": "tsx tools/security/vulnerability-scanner.ts",
    "security:dashboard": "tsx tools/security/vulnerability-scanner.ts --dashboard-only",
    "tool:check:env": "tsx scripts/check-env.ts",
    "env:doctor": "tsx scripts/env-doctor.ts",
    "tool:prepare": "node -e \"process.exit(process.env.CI?0:1)\" || husky install",
    "tool:doctor": "tsx scripts/doctor.ts",
    "tool:doctor:fix": "AUTO=1 tsx scripts/doctor.ts",
    "tool:doctor:safe": "tsx scripts/doctor.ts --timeout 60000",
    "tool:doctor:test": "node scripts/test-doctor.mjs",
    "create-ui-polish-task": "tsx scripts/create-ui-polish-task.ts",
    "populate-hero-tasks": "tsx scripts/populate-hero-tasks.ts",
    "hero:tasks:verify": "tsx scripts/auto-hero-tasks-verification.ts",
    "create:hero-task": "tsx scripts/create-hero-task.ts",
    "process:guarantee": "tsx scripts/process-guarantee-system.ts",
    "auto:process": "tsx scripts/zero-intervention-process.ts",
    "tool:rename:symbol": "tsx scripts/rename.ts symbol",
    "tool:rename:import": "tsx scripts/rename.ts import",
    "tool:rename:route": "tsx scripts/rename.ts route",
    "tool:rename:table": "tsx scripts/rename.ts table",
    "tool:rename:safe": "npm run tool:rename:symbol -- $OLD $NEW && npm run tool:doctor && npm run ci",
    "tool:watch:renames": "tsx scripts/watch-renames.ts",
    "where-used": "tsx scripts/where-used.ts",
    "where-used:component": "tsx scripts/where-used.ts --component",
    "codemod:rename-prop": "tsx scripts/codemod-runner.ts run scripts/codemods/rename-component-prop.js",
    "codemod:redirect-import": "tsx scripts/codemod-runner.ts run scripts/codemods/redirect-import.js",
    "codemod:extract-component": "tsx scripts/codemod-runner.ts run scripts/codemods/extract-component.js",
    "codemod:rollback": "tsx scripts/codemod-runner.ts rollback",
    "codemod:list-backups": "tsx scripts/codemod-runner.ts list-backups",
    "codemod:cleanup": "tsx scripts/codemod-runner.ts cleanup",
    "tool:policy:enforce": "tsx scripts/policy-enforcer.ts",
    "tool:policy:build": "tsx scripts/policy-enforcer.ts --build",
    "tool:dev:status": "node scripts/dev-manager.mjs status",
    "tool:dev:kill": "node scripts/smart-server.js kill",
    "tool:dev:clean": "node scripts/smart-server.js clean",
    "tool:dev:ports": "node scripts/dev-manager.mjs ports",
    "tool:dev:smart": "node scripts/smart-server.js",
    "tool:guard:test": "node scripts/test-route-guard.mjs",
    "tool:guard:test:route": "node -e \"import('./scripts/test-route-guard.mjs').then(m => { const result = m.simulateGitDiff(['components/ui/button.tsx', 'app/sessions/page.tsx']); console.log('Test Result:', result); })\"",
    "tool:ui:contracts": "node design/scripts/component-contract-auditor.mjs || echo \"(info) contracts auditor not present — skipping\"",
    "tool:ui:a11y": "npx -y playwright test tests/ui/a11y.spec.ts || true",
    "tool:ui:a11y:report": "node scripts/accessibility-test.mjs",
    "tool:ui:visual": "npx -y playwright test tests/ui/visual.spec.ts || true",
    "tool:ui:perf": "npx -y lhci autorun --config=design/lhci.config.cjs || true",
    "tool:ui:perf:validate": "node design/scripts/validate-lhci.mjs",
    "validate:clean-clone": "node scripts/validate-clean-clone.mjs",
    "validate:clean-clone:full": "node scripts/validate-clean-clone.mjs --full",
    "visual:test": "playwright test --config=playwright.visual.config.ts",
    "visual:test:ui": "playwright test --config=playwright.visual.config.ts --ui",
    "visual:test:browsers": "playwright test --config=playwright.visual.config.ts --project=chromium --project=firefox --project=webkit",
    "visual:capture-baselines": "tsx scripts/visual-regression-test.ts --capture",
    "visual:update-baselines": "tsx scripts/visual-regression-test.ts --update",
    "visual:compare": "tsx scripts/visual-regression-test.ts --compare",
    "visual:report": "tsx scripts/visual-regression-test.ts --report",
    "tool:design:check": "npm run -s typecheck && npm run -s lint && npm run -s tool:ui:contracts && npm run -s tool:ui:a11y && npm run -s tool:ui:visual",
    "design:guardian": "node design/scripts/design-guardian.mjs --check",
    "design:guardian:advisory": "node design/scripts/design-guardian.mjs --toggle-mode && node design/scripts/design-guardian.mjs --check",
    "design:guardian:brand-aware": "node design/scripts/design-guardian.mjs --brand-aware",
    "design:guardian:required": "node design/scripts/design-guardian.mjs --toggle-mode && node design/scripts/design-guardian.mjs --check",
    "design:guardian:configurable": "node design/scripts/design-guardian.mjs --configurable",
    "design:guardian:toggle": "node design/scripts/design-guardian.mjs --toggle-mode",
    "design:guardian:status": "node design/scripts/design-guardian.mjs --status",
    "tool:ai:evaluate": "node -e \"console.log('[ai:evaluate] no configured evaluations — skipping'); process.exit(0)\"",
    "tool:ai:eval:ci": "node -e \"console.log('[ai:eval:ci] no configured CI evaluations — skipping'); process.exit(0)\"",
    "tool:build:robust": "node scripts/build-robust.mjs",
    "policy:enforce": "tsx scripts/policy-enforcer.ts",
    "guard:test": "node scripts/test-route-guard.mjs",
    "ui:contracts": "node design/scripts/component-contract-auditor.mjs || echo \"(info) contracts auditor not present — skipping\"",
    "ui:a11y": "npx -y playwright test tests/ui/a11y.spec.ts || true",
    "tool:scan:knip": "knip",
    "tool:scan:tsprune": "ts-prune",
    "tool:scan:depcheck": "depcheck",
    "tool:scan:eslint-unused": "eslint --ext .ts,.tsx --rule 'unused-imports/no-unused-imports: error' .",
    "tool:scan:all": "npm run tool:scan:knip && npm run tool:scan:tsprune && npm run tool:scan:depcheck && npm run tool:scan:eslint-unused",
    "cursor:auto": "node scripts/generate-cursor-report.mjs",
    "cursor:report": "node scripts/generate-cursor-report.mjs",
    "cursor:header": "node scripts/cursor-ai-universal-header.mjs",
    "cursor:health": "node scripts/generate-cursor-report.mjs 'Health check'",
    "cursor:session": "node scripts/generate-cursor-report.mjs 'Development session'",
    "claude:context": "node scripts/claude-code-enhancer.mjs",
    "claude:enhance": "node scripts/claude-code-enhancer.mjs",
    "dashboard": "node scripts/dev-session-dashboard.mjs",
    "delivery:automate": "tsx scripts/delivery-automation.ts",
    "delivery:automate:deliver": "tsx scripts/delivery-automation.ts deliver",
    "delivery:automate:batch": "tsx scripts/delivery-automation.ts batch",
    "delivery:automate:performance": "tsx scripts/delivery-automation.ts performance",
    "delivery:automate:cleanup": "tsx scripts/delivery-automation.ts cleanup",
    "changeset": "changeset",
    "version": "changeset version",
    "release": "npm run build && changeset publish"
  },
  "dependencies": {
    "@dct/form-table-csv": "file:./packages/form-table-csv",
    "@dnd-kit/core": "^6.3.1",
    "@dnd-kit/sortable": "^10.0.0",
    "@dnd-kit/utilities": "^3.2.2",
    "@hookform/resolvers": "^5.2.1",
    "@opentelemetry/api": "^1.9.0",
    "@opentelemetry/auto-instrumentations-node": "^0.62.1",
    "@opentelemetry/exporter-jaeger": "^2.0.1",
    "@opentelemetry/exporter-prometheus": "^0.203.0",
    "@opentelemetry/exporter-trace-otlp-http": "^0.203.0",
    "@opentelemetry/instrumentation": "^0.203.0",
    "@opentelemetry/instrumentation-express": "^0.52.0",
    "@opentelemetry/instrumentation-fs": "^0.23.0",
    "@opentelemetry/instrumentation-http": "^0.203.0",
    "@opentelemetry/resources": "^2.0.1",
    "@opentelemetry/sdk-metrics": "^2.0.1",
    "@opentelemetry/sdk-node": "^0.203.0",
    "@opentelemetry/semantic-conventions": "^1.36.0",
    "@opentelemetry/winston-transport": "^0.14.1",
    "@playwright/test": "^1.55.0",
    "@radix-ui/react-accordion": "^1.2.11",
    "@radix-ui/react-alert-dialog": "^1.1.14",
    "@radix-ui/react-aspect-ratio": "^1.1.7",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-checkbox": "^1.3.2",
    "@radix-ui/react-collapsible": "^1.1.11",
    "@radix-ui/react-context-menu": "^2.2.15",
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-dropdown-menu": "^2.1.15",
    "@radix-ui/react-hover-card": "^1.1.14",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-menubar": "^1.1.15",
    "@radix-ui/react-navigation-menu": "^1.2.13",
    "@radix-ui/react-popover": "^1.1.14",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-radio-group": "^1.3.7",
    "@radix-ui/react-scroll-area": "^1.2.9",
    "@radix-ui/react-select": "^2.2.5",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slider": "^1.3.5",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.5",
    "@radix-ui/react-tabs": "^1.1.12",
    "@radix-ui/react-toast": "^1.2.14",
    "@radix-ui/react-toggle": "^1.1.9",
    "@radix-ui/react-toggle-group": "^1.1.11-rc.1752166910601",
    "@radix-ui/react-tooltip": "^1.2.7",
    "@slack/web-api": "^7.10.0",
    "@supabase/auth-helpers-nextjs": "^0.10.0",
    "@supabase/auth-helpers-react": "^0.5.0",
    "@supabase/ssr": "^0.7.0",
    "@supabase/supabase-js": "^2.54.0",
    "@tailwindcss/forms": "^0.5.10",
    "@testing-library/user-event": "^14.6.1",
    "@types/leven": "^2.1.1",
    "@types/pino": "^7.0.4",
    "@types/uuid": "^10.0.0",
    "autoprefixer": "^10.4.21",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "^1.1.1",
    "discord.js": "^14.22.1",
    "embla-carousel-react": "^8.6.0",
    "fast-glob": "^3.3.3",
    "framer-motion": "^12.23.22",
    "handlebars": "^4.7.8",
    "html2canvas": "^1.4.1",
    "input-otp": "^1.1.0",
    "isomorphic-dompurify": "^2.26.0",
    "jspdf": "^3.0.2",
    "jszip": "^3.10.1",
    "leven": "^4.0.0",
    "lucide-react": "^0.539.0",
    "next": "^14.2.0",
    "next-themes": "^0.4.6",
    "nodemailer": "^7.0.6",
    "openai": "^5.12.2",
    "pg": "^8.16.3",
    "picocolors": "^1.1.1",
    "pino": "^9.9.0",
    "pino-pretty": "^13.1.1",
    "puppeteer": "^24.22.0",
    "react": "^18.2.0",
    "react-day-picker": "^9.8.1",
    "react-dom": "^18.2.0",
    "react-hook-form": "^7.51.0",
    "react-resizable-panels": "^2.0.9",
    "recharts": "^3.1.2",
    "redis": "^4.6.0",
    "resend": "^3.1.0",
    "sonner": "^1.4.0",
    "stripe": "^14.25.0",
    "tailwind-merge": "^3.3.1",
    "ts-morph": "^26.0.0",
    "uuid": "^11.1.0",
    "vaul": "^1.1.2",
    "web-vitals": "^5.1.0",
    "ws": "^8.18.0",
    "zod": "^3.22.4",
    "zustand": "^5.0.8"
  },
  "devDependencies": {
    "@axe-core/playwright": "^4.10.2",
    "@changesets/cli": "^2.29.6",
    "@commitlint/cli": "^19.4.0",
    "@commitlint/config-conventional": "^19.4.0",
    "@eslint/eslintrc": "^3",
    "@lhci/cli": "^0.15.1",
    "@sentry/nextjs": "^10.3.0",
    "@storybook/addon-a11y": "^8.6.14",
    "@storybook/addon-essentials": "^8.6.14",
    "@storybook/addon-interactions": "^8.6.14",
    "@storybook/addon-links": "^8.6.14",
    "@storybook/blocks": "^8.6.14",
    "@storybook/react": "^8.6.14",
    "@storybook/test-runner": "^0.23.0",
    "@storybook/testing-library": "^0.2.1",
    "@tanstack/react-query": "^5.85.5",
    "@tanstack/react-query-devtools": "^5.87.4",
    "@testing-library/dom": "^10.4.1",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/react": "^16.3.0",
    "@types/jest": "^30.0.0",
    "@types/node": "^20",
    "@types/papaparse": "^5.3.16",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "@types/vscode": "^1.104.0",
    "@types/ws": "^8.5.0",
    "@typescript-eslint/eslint-plugin": "^7.18.0",
    "@typescript-eslint/parser": "^7.18.0",
    "chokidar": "^4.0.3",
    "depcheck": "^1.4.7",
    "eslint": "^8.57.0",
    "eslint-config-next": "14.2.0",
    "husky": "^9.1.7",
    "jest": "^30.0.5",
    "jest-axe": "^10.0.0",
    "jest-environment-jsdom": "^30.0.5",
    "knip": "^5.63.0",
    "lint-staged": "^15.2.9",
    "papaparse": "^5.5.3",
    "prettier": "^3.3.3",
    "storybook": "^8.6.14",
    "style-dictionary": "^4.4.0",
    "supabase": "^2.40.7",
    "tailwindcss": "^3.4.17",
    "ts-prune": "^0.10.3",
    "tsx": "^4.20.4",
    "typescript": "^5"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix"
    ],
    "*.{json,md,css,scss,html,mdx,graphql,yml,yaml,css}": [
      "prettier --write"
    ]
  }
}
