{
  "name": "my-app",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "node scripts/dev-bootstrap.js && next dev -p 3000",
    "dev:safe": "node scripts/dev-safe.js",
    "prebuild": "tsx scripts/no-leak-guard.ts",
    "build": "node scripts/build-simple.js",
    "build:fast": "node scripts/build-simple.js build:fast",
    "build:memory": "node scripts/build-simple.js build:memory",
    "build:minimal": "node scripts/build-simple.js build:minimal",
    "build:monitor": "node scripts/build-monitor.js",
    "build:monitor:fast": "node scripts/build-monitor.js build:fast",
    "build:monitor:memory": "node scripts/build-monitor.js build:memory",
    "build:optimized": "node scripts/build-optimized.js",
    "build:ultra-fast": "node scripts/build-optimized.js fast",
    "build:performance": "node scripts/build-performance-monitor.js",
    "test:performance": "node scripts/performance-test.js",
    "start": "next start",
    "lint": "node scripts/smart-lint.js",
    "lint:auto": "node scripts/smart-lint.js",
    "lint:ps": "powershell -ExecutionPolicy Bypass -File scripts/smart-lint.ps1",
    "lint:fast": "next lint --max-warnings 0 --quiet",
    "lint:check": "next lint --max-warnings 0",
    "lint:fix": "next lint --fix",
    "lint:staged": "next lint --max-warnings 0 --quiet --file",
    "typecheck": "tsc -p tsconfig.json --noEmit",
    "check": "npm run lint && npm run typecheck",
    "test": "jest",
    "test:watch": "jest --watch",
    "doctor": "tsx scripts/doctor.ts --max-files 500 --batch-size 25 --timeout 120000",
    "doctor:fix": "tsx scripts/doctor.ts --auto-fix --max-files 500 --batch-size 25 --timeout 120000",
    "doctor:safe": "tsx scripts/doctor.ts --max-files 500 --batch-size 25 --timeout 120000",
    "doctor:lightweight": "tsx scripts/doctor.ts --max-files 300 --batch-size 15 --timeout 60000",
    "doctor:fast": "tsx scripts/doctor.ts --max-files 150 --batch-size 10 --timeout 45000",
    "doctor:ultra-light": "tsx scripts/doctor-lightweight.ts",
    "doctor:test": "node scripts/test-doctor.js",
    "ci": "npm run lint && npm run typecheck && npm run test && npm run build:fast",
    "ci:fast": "npm run lint && npm run typecheck && npm run test && npm run build:minimal",
    "ci:memory": "npm run lint && npm run typecheck && npm run test && npm run build:memory",
    "prepare": "husky",
    "rename:symbol": "tsx scripts/rename.ts symbol",
    "rename:import": "tsx scripts/rename.ts import",
    "rename:route": "tsx scripts/rename.ts route",
    "rename:table": "tsx scripts/rename.ts table",
    "safe": "npm run doctor && npm run ci",
    "pre-commit": "node scripts/pre-commit-check.js",
    "pre-push": "node scripts/prepush.cjs",
    "commit:check": "npm run pre-commit",
    "push:check": "npm run pre-push",
    "git:guardian": "node scripts/git-guardian.js",
    "git:smart": "node scripts/smart-hook-manager.js",
    "git:auto": "node scripts/git-auto-recovery.js",
    "git:repair": "npm run git:guardian && npm run git:smart",
    "git:setup-hooks": "npm run git:smart",
    "git:monitor": "npm run git:auto",
    "git:health": "npm run git:guardian && npm run git:smart",
    "git:emergency": "npm run git:repair && npm run git:health",
    "git:master": "node scripts/git-master-control.js",
    "git:master:monitor": "node scripts/git-master-control.js --monitor",
    "rename:safe": "npm run rename:symbol -- $OLD $NEW && npm run doctor && npm run ci",
    "watch:renames": "tsx scripts/watch-renames.ts",
    "policy:enforce": "tsx scripts/policy-enforcer.ts --build",
    "report:cursor": "node scripts/generate-cursor-report.js",
    "report:cursor:api": "node scripts/generate-cursor-report.js \"API endpoint development\"",
    "report:cursor:ui": "node scripts/generate-cursor-report.js \"UI component development\"",
    "report:cursor:types": "node scripts/generate-cursor-report.js \"Type system improvements\"",
    "report:cursor:db": "node scripts/generate-cursor-report.js \"Database and schema work\"",
    "guardian": "node scripts/guardian.js",
    "guardian:start": "node scripts/guardian.js start",
    "guardian:once": "node scripts/guardian.js",
    "guardian:check": "node scripts/guardian.js --status",
    "guardian:health": "node scripts/guardian.js health",
    "guardian:backup": "node scripts/guardian.js backup",
    "guardian:emergency": "node scripts/guardian.js emergency",
    "guardian:config": "node scripts/guardian.js config",
    "guardian:auto:pm2": "powershell -ExecutionPolicy Bypass -File scripts/guardian-pm2.ps1",
    "guardian:auto:task": "powershell -ExecutionPolicy Bypass -File scripts/guardian-task.ps1",
    "guardian:auto:pm2:universal": "scripts\\run-powershell.bat scripts\\guardian-pm2.ps1",
    "guardian:auto:task:universal": "scripts\\run-powershell.bat scripts\\guardian-task.ps1",
    "branch:protect:universal": "scripts\\run-powershell.bat scripts\\branch-protect.ps1",
    "safe:guardian": "npm run guardian:health && npm run safe",
    "backup:auto": "npm run guardian:start",
    "release:baseline": "powershell -ExecutionPolicy Bypass -Command \"$b=(git tag --list v0.1.0); if(-not $b){ git tag -a v0.1.0 -m 'Baseline: Guardian + CI + 0 TS errors' }; git push origin v0.1.0\"",
    "safety:smoke": "node scripts/safety-smoke.cjs",
    "db:migrate:rls": "node scripts/apply-rls-migration.js",
    "security:test": "node scripts/test-security-monitoring.js",
    "restore:drill": "powershell -ExecutionPolicy Bypass -File scripts/restore-drill.ps1",
    "helper": "powershell -ExecutionPolicy Bypass -File scripts/dev-helper.ps1",
    "check:quick": "npm run doctor:ultra-light && npm run lint",
    "check:full": "npm run doctor && npm run lint && npm run test",
    "workflow:check": "npm run check:quick",
    "workflow:safe": "npm run check:full",
    "workflow:ready": "npm run ci",
    "commands": "node scripts/generate-command-library.js",
    "show:commands": "node scripts/generate-command-library.js",
    "library:commands": "node scripts/generate-command-library.js",
    "show": "node scripts/cursor-ai-commands.js",
    "cursor:commands": "node scripts/cursor-ai-commands.js",
    "ai:commands": "node scripts/cursor-ai-commands.js",
    "cursor:header": "node scripts/cursor-ai-universal-header.js",
    "cursor:header:fix": "node scripts/cursor-ai-universal-header.js --fix",
    "cursor:header:report": "node scripts/cursor-ai-universal-header.js --report",
    "cursor:auto": "node scripts/cursor-ai-auto-start.js",
    "cursor:auto:manual": "node scripts/cursor-ai-auto-start.js --manual",
    "hero:unified": "node scripts/hero-unified-orchestrator.js",
    "hero:unified:start": "node scripts/hero-unified-orchestrator.js start",
    "hero:unified:status": "node scripts/mit-hero-unified-integration.js status",
    "hero:unified:health": "node scripts/mit-hero-unified-integration.js health",
    "hero:unified:test": "node scripts/hero-unified-orchestrator.js test",
    "hero:unified:optimize": "node scripts/mit-hero-unified-integration.js optimize",
    "hero:unified:audit": "node scripts/hero-unified-orchestrator.js audit",
    "hero:ultimate:optimized": "node scripts/hero-ultimate-optimized.js",
    "hero:ultimate:test": "node scripts/hero-ultimate-simple.js test",
    "hero:ultimate:optimize": "node scripts/hero-ultimate-optimized.js optimize",
    "hero:cleanup": "node scripts/hero-cleanup.js",
    "memory:detect": "tsx scripts/memory-leak-detector.ts",
    "memory:fix": "tsx scripts/memory-leak-detector.ts --fix",
    "memory:report": "tsx scripts/memory-leak-detector.ts --report",
    "compliance:enforce": "tsx scripts/universal-header-enforcer.ts",
    "compliance:fix": "tsx scripts/universal-header-enforcer.ts --fix",
    "compliance:report": "tsx scripts/universal-header-enforcer.ts --report",
    "sentinel:check": "tsx scripts/sentinel.ts check",
    "sentinel:fix": "tsx scripts/sentinel.ts fix",
    "build:smart": "tsx scripts/intelligent-build-orchestrator.ts",
    "build:orchestrate": "tsx scripts/intelligent-build-orchestrator.ts",
    "build:ai": "tsx scripts/intelligent-build-orchestrator.ts",
    "cursor:watch": "node scripts/cursor-ai-auto-watcher.js",
    "cursor:watch:start": "node scripts/cursor-ai-auto-watcher.js --start",
    "cursor:watch:stop": "node scripts/cursor-ai-auto-watcher.js --stop",
    "cursor:watch:status": "node scripts/cursor-ai-auto-watcher.js --status",
    "todo:add": "node scripts/todo-system.js add",
    "todo:list": "node scripts/todo-system.js list",
    "todo:complete": "node scripts/todo-system.js complete",
    "todo:search": "node scripts/todo-system.js search",
    "todo:stats": "node scripts/todo-system.js stats",
    "task:orchestrator": "node scripts/task-orchestrator.js",
    "task:ps": "powershell -ExecutionPolicy Bypass -File scripts/task-orchestrator.ps1",
    "task:auto": "node scripts/task-orchestrator.js",
    "task:git:status": "node scripts/task-orchestrator.js git:status",
    "task:lint": "node scripts/task-orchestrator.js lint",
    "task:typecheck": "node scripts/task-orchestrator.js typecheck",
    "task:build": "node scripts/task-orchestrator.js build",
    "task:doctor": "node scripts/task-orchestrator.js doctor",
    "task:ci": "node scripts/task-orchestrator.js ci",
    "task:safe": "node scripts/task-orchestrator.js safe",
    "automation:master": "node scripts/automation-master.js",
    "automation:git": "node scripts/automation-master.js git:status",
    "automation:lint": "node scripts/automation-master.js lint",
    "automation:build": "node scripts/automation-master.js build",
    "automation:doctor": "node scripts/automation-master.js doctor",
    "automation:ci": "node scripts/automation-master.js ci",
    "automation:safe": "node scripts/automation-master.js safe",
    "todo": "node scripts/todo-system.js",
    "startup": "node startup-automation.js",
    "auto": "node auto-trigger.js",
    "uni": "node uni-automation.js",
    "uni:help": "node uni-wrapper.js",
    "hero": "node scripts/hero-system.js",
    "hero:ps": "powershell -ExecutionPolicy Bypass -File scripts/hero-system.ps1",
    "hero:dashboard": "node scripts/hero-system.js dashboard",
    "hero:status": "node scripts/hero-system.js status",
    "hero:heroes": "node scripts/hero-system.js heroes",
    "hero:villains": "node scripts/hero-system.js villains",
    "hero:threats": "node scripts/hero-system.js threats",
    "hero:recommendations": "node scripts/hero-system.js recommendations",
    "hero:health": "node scripts/hero-system.js health",
    "hero:upgrade": "node scripts/hero-system.js upgrade",
    "hero:repair": "node scripts/hero-system.js repair",
    "hero:threat:response": "node scripts/hero-threat-response-simple.js",
    "hero:threat:start": "node scripts/hero-threat-response-simple.js start",
    "hero:threat:status": "node scripts/hero-threat-response-simple.js status",
    "hero:threat:scan": "node scripts/hero-threat-response-simple.js scan",
    "hero:intelligence": "node scripts/hero-intelligence.js",
    "hero:intelligence:start": "node scripts/hero-intelligence.js start",
    "hero:intelligence:dashboard": "node scripts/hero-intelligence.js dashboard",
    "hero:intelligence:learn": "node scripts/hero-intelligence.js learn",
    "hero:intelligence:optimize": "node scripts/hero-intelligence.js optimize",
    "hero:intelligence:patterns": "node scripts/hero-intelligence.js patterns",
    "orchestrator": "node scripts/hero-orchestrator.js",
    "orchestrator:dashboard": "node scripts/hero-orchestrator.js dashboard",
    "orchestrator:status": "node scripts/hero-orchestrator.js status",
    "orchestrator:health": "node scripts/hero-orchestrator.js health",
    "orchestrator:threats": "node scripts/hero-orchestrator.js threats",
    "orchestrator:optimize": "node scripts/hero-orchestrator.js optimize",
    "orchestrator:upgrade": "node scripts/hero-orchestrator.js upgrade",
    "orchestrator:emergency": "node scripts/hero-orchestrator.js emergency",
    "orchestrator:history": "node scripts/hero-orchestrator.js history",
    "orchestrator:start": "node scripts/hero-orchestrator.js start",
    "hero:ultimate": "node scripts/hero-ultimate.js",
    "hero:ultimate:start": "node scripts/hero-ultimate-simple.js start",
    "hero:ultimate:status": "node scripts/hero-ultimate-simple.js status",
    "hero:ultimate:health": "node scripts/hero-ultimate-simple.js health",
    "hero:ultimate:stop": "node scripts/hero-ultimate-simple.js stop",
    "hero:ultimate:persist": "node scripts/hero-ultimate-simple.js persist",
    "hero:ultimate:persistence-status": "node scripts/hero-ultimate-simple.js persistence-status",
    "hero:ultimate:extreme-auto": "node scripts/hero-ultimate-simple.js extreme-auto",
    "hero:ultimate:max-auto": "node scripts/hero-ultimate-simple.js max-auto",
    "hero:ultimate:auto-status": "node scripts/hero-ultimate-simple.js auto-status",
    "hero:ultimate:background": "scripts/hero-ultimate-runner.bat",
    "hero:ultimate:ps": "powershell -ExecutionPolicy Bypass -File scripts/hero-ultimate.ps1",
    "hero:validate:existence": "node scripts/hero-validation-system.js existence",
    "hero:validate:basic": "node scripts/hero-validation-system.js functionality",
    "hero:validate:commands": "node scripts/hero-validation-system.js commands",
    "hero:validate:full": "node scripts/hero-validation-system.js full",
    "hero:audit:full": "node scripts/hero-audit-system.js",
    "hero:audit:scripts": "node scripts/hero-audit-system.js --scripts-only",
    "hero:audit:systems": "node scripts/hero-audit-system.js --systems-only",
    "hero:sentient:perfection": "node scripts/mit-hero-sentient-army-perfection.js",
    "hero:sentient:execute": "node scripts/mit-hero-sentient-army-perfection.js execute",
    "hero:sentient:status": "node scripts/mit-hero-sentient-army-perfection.js status",
    "hero:sentient:help": "node scripts/mit-hero-sentient-army-perfection.js help",
    "quantum:neural:initialize": "node scripts/quantum-neural-engine.js initialize",
    "quantum:neural:optimize": "node scripts/quantum-neural-engine.js optimize",
    "quantum:neural:status": "node scripts/quantum-neural-engine.js status",
    "quantum:neural:metrics": "node scripts/quantum-neural-engine.js metrics",
    "quantum:neural:help": "node scripts/quantum-neural-engine.js help",
    "causality:predict": "node scripts/causality-predictor.js predict",
    "causality:status": "node scripts/causality-predictor.js status",
    "causality:metrics": "node scripts/causality-predictor.js metrics",
    "causality:help": "node scripts/causality-predictor.js help",
    "consciousness:initialize": "node scripts/consciousness-simulator.js initialize",
    "consciousness:emerge": "node scripts/consciousness-simulator.js emerge",
    "consciousness:collective": "node scripts/consciousness-simulator.js collective",
    "consciousness:meta": "node scripts/consciousness-simulator.js meta",
    "consciousness:evolve": "node scripts/consciousness-simulator.js evolve",
    "consciousness:status": "node scripts/consciousness-simulator.js status",
    "consciousness:metrics": "node scripts/consciousness-simulator.js metrics",
    "consciousness:help": "node scripts/consciousness-simulator.js help",
    "hero:unified:execute": "node scripts/mit-hero-unified-integration.js execute",
    "hero:unified:heal": "node scripts/mit-hero-unified-integration.js heal",
    "hero:unified:help": "node scripts/mit-hero-unified-integration.js help",
    "hero:bulletproof:activate": "node scripts/activate-autonomous-systems.js",
    "hero:test:health": "node scripts/test-system-health.js",
    "hero:overview": "echo '🎯 MIT HERO SYSTEM: ONE SEAMLESS, OILED MACHINE' && echo '================================================' && echo '✅ All systems operational and unified' && echo '🧠 5 high-tier heroes working as one' && echo '🚀 100% autonomous operation' && echo '🛡️ Bulletproof reliability' && echo '🔮 Continuous self-evolution' && echo '' && echo 'Available commands:' && echo '  npm run hero:unified:status    - Check system status' && echo '  npm run hero:unified:health    - Monitor system health' && echo '  npm run hero:unified:execute   - Activate autonomous operation' && echo '  npm run hero:test:health      - Test system health' && echo '  npm run hero:overview         - Show this overview'"
  },
  "dependencies": {
    "@radix-ui/react-accordion": "^1.2.11",
    "@radix-ui/react-alert-dialog": "^1.1.14",
    "@radix-ui/react-aspect-ratio": "^1.1.7",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-checkbox": "^1.3.2",
    "@radix-ui/react-collapsible": "^1.1.11",
    "@radix-ui/react-context-menu": "^2.2.15",
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-dropdown-menu": "^2.1.15",
    "@radix-ui/react-hover-card": "^1.1.14",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-menubar": "^1.1.15",
    "@radix-ui/react-navigation-menu": "^1.2.13",
    "@radix-ui/react-popover": "^1.1.14",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-radio-group": "^1.3.7",
    "@radix-ui/react-scroll-area": "^1.2.9",
    "@radix-ui/react-select": "^2.2.5",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slider": "^1.3.5",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.5",
    "@radix-ui/react-tabs": "^1.1.12",
    "@radix-ui/react-toast": "^1.2.14",
    "@radix-ui/react-toggle": "^1.1.9",
    "@radix-ui/react-toggle-group": "^1.1.11-rc.1752166910601",
    "@radix-ui/react-tooltip": "^1.2.7",
    "@supabase/auth-helpers-nextjs": "^0.10.0",
    "@supabase/ssr": "^0.1.0",
    "@supabase/supabase-js": "^2.54.0",
    "@tailwindcss/forms": "^0.5.10",
    "@types/leven": "^2.1.1",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "^1.1.1",
    "embla-carousel-react": "^8.6.0",
    "fast-glob": "^3.3.3",
    "input-otp": "^1.1.0",
    "leven": "^4.0.0",
    "lucide-react": "^0.539.0",
    "next": "15.4.6",
    "next-themes": "^0.4.6",
    "picocolors": "^1.1.1",
    "react": "19.1.0",
    "react-day-picker": "^9.8.1",
    "react-dom": "19.1.0",
    "react-hook-form": "^7.51.0",
    "react-resizable-panels": "^2.0.9",
    "recharts": "^3.1.2",
    "resend": "^3.1.0",
    "sonner": "^1.4.0",
    "stripe": "^14.10.0",
    "tailwind-merge": "^3.3.1",
    "ts-morph": "^26.0.0",
    "uuid": "^9.0.1",
    "vaul": "^1.1.2",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@next/bundle-analyzer": "^15.4.6",
    "@sentry/nextjs": "^10.3.0",
    "@swc/core": "^1.13.3",
    "@testing-library/jest-dom": "^6.6.4",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/jest": "^30.0.0",
    "@types/node": "^20",
    "@types/papaparse": "^5.3.16",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "@types/uuid": "^9.0.7",
    "autoprefixer": "^10.4.21",
    "chokidar": "^4.0.3",
    "eslint": "^9",
    "eslint-config-next": "15.4.6",
    "get-port": "^7.0.0",
    "husky": "^9.1.7",
    "jest": "^30.0.5",
    "jest-environment-jsdom": "^30.0.5",
    "papaparse": "^5.5.3",
    "postcss": "^8.5.6",
    "rimraf": "^6.0.1",
    "tailwindcss": "^3.4.17",
    "ts-node": "^10.9.2",
    "tsx": "^4.20.4",
    "typescript": "^5"
  }
}
